// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "Writer.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



Writer::mWriter_ptr Writer::mWriter_Helper::_nil() {
  return ::Writer::mWriter::_nil();
}

::CORBA::Boolean Writer::mWriter_Helper::is_nil(::Writer::mWriter_ptr p) {
  return ::CORBA::is_nil(p);

}

void Writer::mWriter_Helper::release(::Writer::mWriter_ptr p) {
  ::CORBA::release(p);
}

void Writer::mWriter_Helper::marshalObjRef(::Writer::mWriter_ptr obj, cdrStream& s) {
  ::Writer::mWriter::_marshalObjRef(obj, s);
}

Writer::mWriter_ptr Writer::mWriter_Helper::unmarshalObjRef(cdrStream& s) {
  return ::Writer::mWriter::_unmarshalObjRef(s);
}

void Writer::mWriter_Helper::duplicate(::Writer::mWriter_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

Writer::mWriter_ptr
Writer::mWriter::_duplicate(::Writer::mWriter_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

Writer::mWriter_ptr
Writer::mWriter::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


Writer::mWriter_ptr
Writer::mWriter::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

Writer::mWriter_ptr
Writer::mWriter::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_mWriter _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_mWriter* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_mWriter;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* Writer::mWriter::_PD_repoId = "IDL:Writer/mWriter:1.0";


Writer::_objref_mWriter::~_objref_mWriter() {
  
}


Writer::_objref_mWriter::_objref_mWriter(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::Writer::mWriter::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
Writer::_objref_mWriter::_ptrToObjRef(const char* id)
{
  if( id == ::Writer::mWriter::_PD_repoId )
    return (::Writer::mWriter_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::Writer::mWriter::_PD_repoId) )
    return (::Writer::mWriter_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cfloat
class _0RL_cd_676D4F73C2F8AF78_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_676D4F73C2F8AF78_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Float result;
};

void _0RL_cd_676D4F73C2F8AF78_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_676D4F73C2F8AF78_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Float&)result <<= _n;

}

const char* const _0RL_cd_676D4F73C2F8AF78_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_676D4F73C2F8AF78_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_676D4F73C2F8AF78_00000000* tcd = (_0RL_cd_676D4F73C2F8AF78_00000000*)cd;
  Writer::_impl_mWriter* impl = (Writer::_impl_mWriter*) svnt->_ptrToInterface(Writer::mWriter::_PD_repoId);
  tcd->result = impl->oCurrentCursorPositionX();


}

::CORBA::Float Writer::_objref_mWriter::oCurrentCursorPositionX()
{
  _0RL_cd_676D4F73C2F8AF78_00000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_10000000, "oCurrentCursorPositionX", 24);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_676D4F73C2F8AF78_20000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_676D4F73C2F8AF78_00000000* tcd = (_0RL_cd_676D4F73C2F8AF78_00000000*)cd;
  Writer::_impl_mWriter* impl = (Writer::_impl_mWriter*) svnt->_ptrToInterface(Writer::mWriter::_PD_repoId);
  tcd->result = impl->oCurrentCursorPositionY();


}

::CORBA::Float Writer::_objref_mWriter::oCurrentCursorPositionY()
{
  _0RL_cd_676D4F73C2F8AF78_00000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_20000000, "oCurrentCursorPositionY", 24);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_cboolean
class _0RL_cd_676D4F73C2F8AF78_30000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_676D4F73C2F8AF78_30000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Boolean arg_0;
};

void _0RL_cd_676D4F73C2F8AF78_30000000::marshalArguments(cdrStream& _n)
{
  _n.marshalBoolean(arg_0);

}

void _0RL_cd_676D4F73C2F8AF78_30000000::unmarshalArguments(cdrStream& _n)
{
  arg_0 = _n.unmarshalBoolean();

}

const char* const _0RL_cd_676D4F73C2F8AF78_30000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_676D4F73C2F8AF78_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_676D4F73C2F8AF78_30000000* tcd = (_0RL_cd_676D4F73C2F8AF78_30000000*)cd;
  Writer::_impl_mWriter* impl = (Writer::_impl_mWriter*) svnt->_ptrToInterface(Writer::mWriter::_PD_repoId);
  impl->gotoStart(tcd->arg_0);


}

void Writer::_objref_mWriter::gotoStart(::CORBA::Boolean sel)
{
  _0RL_cd_676D4F73C2F8AF78_30000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_40000000, "gotoStart", 10);
  _call_desc.arg_0 = sel;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_676D4F73C2F8AF78_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_676D4F73C2F8AF78_30000000* tcd = (_0RL_cd_676D4F73C2F8AF78_30000000*)cd;
  Writer::_impl_mWriter* impl = (Writer::_impl_mWriter*) svnt->_ptrToInterface(Writer::mWriter::_PD_repoId);
  impl->gotoEnd(tcd->arg_0);


}

void Writer::_objref_mWriter::gotoEnd(::CORBA::Boolean sel)
{
  _0RL_cd_676D4F73C2F8AF78_30000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_50000000, "gotoEnd", 8);
  _call_desc.arg_0 = sel;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_676D4F73C2F8AF78_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_676D4F73C2F8AF78_30000000* tcd = (_0RL_cd_676D4F73C2F8AF78_30000000*)cd;
  Writer::_impl_mWriter* impl = (Writer::_impl_mWriter*) svnt->_ptrToInterface(Writer::mWriter::_PD_repoId);
  impl->gotoStartOfLine(tcd->arg_0);


}

void Writer::_objref_mWriter::gotoStartOfLine(::CORBA::Boolean sel)
{
  _0RL_cd_676D4F73C2F8AF78_30000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_60000000, "gotoStartOfLine", 16);
  _call_desc.arg_0 = sel;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_676D4F73C2F8AF78_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_676D4F73C2F8AF78_30000000* tcd = (_0RL_cd_676D4F73C2F8AF78_30000000*)cd;
  Writer::_impl_mWriter* impl = (Writer::_impl_mWriter*) svnt->_ptrToInterface(Writer::mWriter::_PD_repoId);
  impl->gotoEndOfLine(tcd->arg_0);


}

void Writer::_objref_mWriter::gotoEndOfLine(::CORBA::Boolean sel)
{
  _0RL_cd_676D4F73C2F8AF78_30000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_70000000, "gotoEndOfLine", 14);
  _call_desc.arg_0 = sel;

  _invoke(_call_desc);



}
Writer::_pof_mWriter::~_pof_mWriter() {}


omniObjRef*
Writer::_pof_mWriter::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::Writer::_objref_mWriter(ior, id);
}


::CORBA::Boolean
Writer::_pof_mWriter::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::Writer::mWriter::_PD_repoId) )
    return 1;
  
  return 0;
}

const Writer::_pof_mWriter _the_pof_Writer_mmWriter;

Writer::_impl_mWriter::~_impl_mWriter() {}


::CORBA::Boolean
Writer::_impl_mWriter::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "oCurrentCursorPositionX") ) {

    _0RL_cd_676D4F73C2F8AF78_00000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_10000000, "oCurrentCursorPositionX", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "oCurrentCursorPositionY") ) {

    _0RL_cd_676D4F73C2F8AF78_00000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_20000000, "oCurrentCursorPositionY", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "gotoStart") ) {

    _0RL_cd_676D4F73C2F8AF78_30000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_40000000, "gotoStart", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "gotoEnd") ) {

    _0RL_cd_676D4F73C2F8AF78_30000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_50000000, "gotoEnd", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "gotoStartOfLine") ) {

    _0RL_cd_676D4F73C2F8AF78_30000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_60000000, "gotoStartOfLine", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "gotoEndOfLine") ) {

    _0RL_cd_676D4F73C2F8AF78_30000000 _call_desc(_0RL_lcfn_676D4F73C2F8AF78_70000000, "gotoEndOfLine", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
Writer::_impl_mWriter::_ptrToInterface(const char* id)
{
  if( id == ::Writer::mWriter::_PD_repoId )
    return (::Writer::_impl_mWriter*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::Writer::mWriter::_PD_repoId) )
    return (::Writer::_impl_mWriter*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
Writer::_impl_mWriter::_mostDerivedRepoId()
{
  return ::Writer::mWriter::_PD_repoId;
}

POA_Writer::mWriter::~mWriter() {}

